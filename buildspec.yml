version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: 979211549557
    IMAGE_REPO_NAME: attachment-processor
  secrets-manager:
    EXTERNAL_CRT_NON_PROD: "arn:aws:secretsmanager:eu-west-2:979211549557:secret:non-production.txm.external.crt"
    EXTERNAL_CRT_PROD: "arn:aws:secretsmanager:eu-west-2:979211549557:secret:production.txm.external.crt"
    GITHUB_OAUTH_TOKEN: "arn:aws:secretsmanager:eu-west-2:979211549557:secret:gh-oauth-token"
phases:
  install:
    runtime-versions:
      java: corretto21
    commands:
      - apt-get update
      - apt-get install -y awscli openssl
      - source_directory=$CODEBUILD_SRC_DIR
      - wget -nv -O /tmp/sbt-1.10.11.zip https://github.com/sbt/sbt/releases/download/v1.10.11/sbt-1.10.11.zip
      - unzip /tmp/sbt-1.10.11.zip -d /usr/local/
      - chmod +x /usr/local/sbt/bin/sbt
  pre_build:
    commands:
      - echo Creating certificates...
      - echo "$EXTERNAL_CRT_NON_PROD" > new-non-production.txm.external.crt.pem
      - echo "$EXTERNAL_CRT_PROD" > new-production.txm.external.crt.pem
      - echo Logging into ecr
      - aws ecr get-login-password | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - export IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
  build:
    commands:
      - echo Build started on `date`
      - MAKE_RELEASE=true /usr/local/sbt/bin/sbt createVersionFile
      - /usr/local/sbt/bin/sbt -mem 2048 clean assembly
      - |
        if [ "$CODEBUILD_WEBHOOK_HEAD_REF" = "refs/heads/main" ]; then
          echo "On main branch..."
          new_tag_version=$(cat version.txt)
          echo "New tag is:$new_tag_version"
          commit_sha=$(git rev-parse HEAD)
          DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          curl -s -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${GITHUB_OAUTH_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28"  https://api.github.com/repos/hmrc/nonrep-attachment-processor/tags | grep --quiet -e $new_tag_version && echo "tag version already pushed" && exit 0 || echo "Pushing new tag $new_tag_version..."
          post_tag=$(curl -v -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${GITHUB_OAUTH_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/hmrc/nonrep-attachment-processor/git/tags" -d '{"tag":"'"$new_tag_version"'","message":"New tag version '"$new_tag_version"'","object":"'"$commit_sha"'","type":"commit","tagger":{"name":"service-nonrepudiation","email":"hmrc-ddcw-team-nonrepudiation-g@digital.hmrc.gov.uk", "date":"'"$DATE"'"}}')
          if [ -z "$post_tag" ]; then echo "Failed to post git tag"; exit 1; fi
          tag_sha=$(echo "$post_tag" | jq -r '.sha')
          post_git_refs=$(curl -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${GITHUB_OAUTH_TOKEN}" -H "X-GitHub-Api-Version: 2022-11-28" "https://api.github.com/repos/hmrc/nonrep-attachment-processor/git/refs" -d '{"ref":"refs/tags/'"$new_tag_version"'","sha":"'"$tag_sha"'"}')
          if [ -z "$post_git_refs" ]; then echo "Failed to post git tag reference"; exit 1; fi
          export IMAGE_TAG=$new_tag_version; export IS_LATEST="true";
        fi
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - if [ ! -z "$IS_LATEST" ]; then docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest; fi
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - if [ ! -z $IS_LATEST ]; then docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest; fi
      - echo finished
